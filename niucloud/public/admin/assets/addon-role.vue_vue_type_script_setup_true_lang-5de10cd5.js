import{d as f,r as d,c as i,o as _,E as k,e as C,v as g,u as s}from"./base-d77b0726.js";/* empty css                *//* empty css                    */import{e as v}from"./common-56ee0a80.js";import{E as y}from"./index-5ee2b751.js";const R=f({__name:"addon-role",props:{data:{type:Object,default:()=>{}},modelValue:{type:Array,default:()=>[]}},emits:["update:modelValue","change"],setup(u,{emit:h}){const t=u;let r=d([]);r.value.push(t.data);const m=i({get(){return t.modelValue},set(e){h("update:modelValue",e)}}),c=d(null);_(()=>{k(()=>{var e=[];t.modelValue.forEach(a=>l(a,r.value,e)),c.value.setCheckedKeys(e)})});const l=(e,a,o)=>{a.forEach(n=>{e==n.menu_key?(!n.children||n.children.length==0)&&o.push(e):n.children&&n.children.length>0&&l(e,n.children,o)})},p=v(e=>{m.value=c.value.getCheckedNodes(!1,!0).map(a=>a.menu_key)});return(e,a)=>{const o=y;return C(),g(o,{data:s(r),props:{label:"menu_name"},"show-checkbox":"","expand-on-click-node":!1,onCheckChange:s(p),"node-key":"menu_key",ref_key:"treeRef",ref:c},null,8,["data","onCheckChange"])}}});export{R as _};
